{"version":3,"file":"static/js/408.40f96936.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.js","components/Loader/Loader.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Home.jsx","redux/Contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorMessage = styled.b`\ntext-align: center;\n  color: ${p => p.theme.colors.error};\n`;\n","import { ErrorMessage } from './Error.styled';\n\nexport const Error = ({ message }) => <ErrorMessage>{message}</ErrorMessage>;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#4fa94d\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{ justifyContent: 'center' }}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormTitle = styled.h1`\ntext-align: center;\npadding: 0;\n`\nexport const Label = styled.label`\n  width: 100%;\n`;\n\nexport const InputTitle = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.spasing(3)};\n  font-weight: ${p => p.theme.weight.accent};\n`;\n\nexport const FieldWraper = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.spasing(5)};\n`;\n\nexport const StyleField = styled(Field)`\n  width: 100%;\n  display: block;\n  border: ${p => p.theme.borders.gray};\n  border-radius: ${p => p.theme.spasing(1)};\n`;\n\nexport const StyleErrorMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormTitle,\n  Label,\n  InputTitle,\n  FieldWraper,\n  StyleField,\n  StyleErrorMessage,\n} from './ContactForm.styled';\nimport { Button } from '../ContactItem/ContactItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/selectors';\nimport { selectIsLoading, selectError } from 'redux/Contacts/selectors';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2).required('Enter a name'),\n  number: yup\n    .string()\n    .matches(\n      /(?:([+]\\d{1,4})[-.\\s]?)?(?:[(](\\d{1,3})[)][-.\\s]?)?(\\d{1,4})[-.\\s]?(\\d{1,4})[-.\\s]?(\\d{1,9})/g,\n      'Enter a phone number with at least 9 digits'\n    )\n    .required('Enter a phone number'),\n});\n\nexport const ContactForm = () => {\n  const contactList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleSubmit = (newContact, { resetForm }) => {\n    const checkContact = contactList.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (checkContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <main>\n      <FormTitle>Phonebook</FormTitle>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <Label>\n            <InputTitle>Name</InputTitle>\n            <FieldWraper>\n              <StyleField type=\"text\" name=\"name\" placeholder=\"Enter a name\" />\n              <StyleErrorMessage name=\"name\" component=\"div\" />\n            </FieldWraper>\n          </Label>\n          <Label>\n            <InputTitle>Number</InputTitle>\n            <FieldWraper>\n              <StyleField\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter a phone number\"\n              />\n              <StyleErrorMessage name=\"number\" component=\"div\" />\n            </FieldWraper>\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n      {isLoading && <Loader />}\n      {error && (\n        <Error\n          message={isLoading ? error : 'Please register to add contacts.'}\n        />\n      )}\n    </main>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Home() {\n  return (\n    <ContactForm />\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["ErrorMessage","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","error","Error","_ref","message","_jsx","children","Loader","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","FormTitle","Label","_templateObject2","InputTitle","_templateObject3","spasing","weight","accent","FieldWraper","_templateObject4","StyleField","Field","_templateObject5","borders","gray","StyleErrorMessage","_templateObject6","schema","yup","shape","name","min","required","number","matches","ContactForm","contactList","useSelector","selectContacts","dispatch","useDispatch","isLoading","selectIsLoading","selectError","_jsxs","Formik","initialValues","validationSchema","onSubmit","newContact","resetForm","some","contact","toLowerCase","alert","concat","addContact","Form","autoComplete","type","placeholder","component","Button","Home","state","contacts","items","selectVisibleContacts","createSelector","filter","includes"],"sourceRoot":""}